{"version":3,"sources":["UI/Card.module.css","components/Cart.module.css","slice/CartUiSlice.js","UI/Card.jsx","components/CartItem.jsx","components/Cart.jsx","action/CartActions.js","UI/Loading.js","App.js","store/store.js","index.js","components/CartItem.module.css"],"names":["module","exports","cartSlice","createSlice","name","initialState","loading","showCart","data","reducers","state","action","payload","addItemToCart","cartSliceActions","actions","Card","props","className","classes","card","children","CartItem","item","title","quantity","total","price","toFixed","itemprice","details","Cart","dispatch","useDispatch","useSelector","get","useEffect","fetch","then","response","json","items","console","log","cart","onClick","map","el","id","totalPrice","Spinner","styled","div","Loading","App","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,qB,+HCMnBC,EAAYC,YAAY,CAC1BC,KAAM,MACNC,aAPiB,CACjBC,SAAS,EACTC,UAAU,EACVC,KAAM,IAKNC,SAAU,CACNH,QADM,SACEI,EAAOC,GACXD,EAAMJ,QAAUK,EAAOC,SAE3BL,SAJM,SAIGG,EAAOC,GACZD,EAAMH,SAAWI,EAAOC,SAG5BC,cARM,SAQQH,EAAOC,GACjBD,EAAMF,KAAOG,EAAOC,YAKnBE,EAAmBZ,EAAUa,QAC3Bb,I,wBCbAc,EAVF,SAACC,GACZ,OACE,yBACEC,UAAS,UAAKC,IAAQC,KAAb,YAAqBH,EAAMC,UAAYD,EAAMC,UAAY,IADpE,SAGGD,EAAMI,Y,iCCcEC,EApBE,SAACL,GAChB,MAA0CA,EAAMM,KAAxCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,MAChC,OACE,qBAAIT,UAAWC,IAAQI,KAAvB,UACE,mCACE,6BAAKC,IACL,sBAAKN,UAAWC,IAAQQ,MAAxB,cACID,EAAME,QAAQ,GAAI,IACpB,uBAAMV,UAAWC,IAAQU,UAAzB,eAAuCF,EAAMC,QAAQ,GAArD,kBAGJ,qBAAKV,UAAWC,IAAQW,QAAxB,SACE,sBAAKZ,UAAWC,IAAQM,SAAxB,eACI,+BAAOA,aCsDJM,EAxDF,WACX,IAAMC,EAAWC,cACX1B,EAAW2B,aAAY,SAAAxB,GAAK,OAAIA,EAAMyB,IAAI5B,YAC1CC,EAAO0B,aAAY,SAAAxB,GAAK,OAAIA,EAAMyB,IAAI3B,QA4B5C,OAPA4B,qBAAU,WACRJ,EClCA,iDAAO,WAAOA,GAAP,2EACHA,EAASlB,EAAiBR,SAAQ,IAClC+B,MAAM,gEACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA9B,GAEFwB,EAASlB,EAAiBD,cAAcL,EAAKiC,WAErDT,EAASlB,EAAiBR,SAAQ,IAR/B,2CAAP,yDDmCC,IACH8B,qBAAU,WACRM,QAAQC,IAAInC,KACX,CAACA,IAGF,eAAC,EAAD,CAAMU,UAAWC,IAAQyB,KAAzB,UACE,oDACA,wBAAQC,QAdM,WAEhBb,EAASlB,EAAiBP,UAAS,KAYjC,yCACA,6BAEGA,GAAYC,EAAKsC,KAAI,SAAAC,GAAE,OACtB,cAAC,EAAD,CAEExB,KAAM,CACJyB,GAAID,EAAGC,GACPxB,MAAOuB,EAAG3C,KACVqB,SAAUsB,EAAGtB,SACbC,MAAOqB,EAAGE,WACVtB,MAAOoB,EAAGpB,QANPoB,EAAGC,a,QE9CdE,E,MAAUC,EAAOC,IAAV,0ZAoBEC,EAxBC,WACZ,OAAO,cAACH,EAAD,KCcII,MAXf,WACE,IAAMhD,EAAU4B,aAAY,SAAAxB,GAAK,OAAIA,EAAMyB,IAAI7B,WAC/C,OACE,qCACGA,GAAW,cAAC,EAAD,IAEZ,cAAC,EAAD,QCHSiD,EALDC,YAAe,CACzBC,QAAS,CACLtB,IAAKjC,EAAUuD,WCEvBC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAGFK,SAASC,eAAe,U,kBCX1B7D,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,SAAW,2BAA2B,MAAQ,wBAAwB,UAAY,4BAA4B,QAAU,6B","file":"static/js/main.12d0f38a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1C7te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__2hj17\"};","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    showCart: false,\r\n    data: []\r\n}\r\nconst cartSlice = createSlice({\r\n    name: 'get',\r\n    initialState: initialState,\r\n    reducers: {\r\n        loading(state, action) {\r\n            state.loading = action.payload\r\n        },\r\n        showCart(state, action) {\r\n            state.showCart = action.payload\r\n            // console.log('showed');\r\n        },\r\n        addItemToCart(state, action) {\r\n            state.data = action.payload\r\n            // console.log(state.data);\r\n        }\r\n    }\r\n})\r\nexport const cartSliceActions = cartSlice.actions\r\nexport default cartSlice","import classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <section\r\n      className={`${classes.card} ${props.className ? props.className : ''}`}\r\n    >\r\n      {props.children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import classes from './CartItem.module.css';\r\nconst CartItem = (props) => {\r\n  const { title, quantity, total, price } = props.item;\r\n  return (\r\n    <li className={classes.item}>\r\n      <header>\r\n        <h3>{title}</h3>\r\n        <div className={classes.price}>\r\n          ${total.toFixed(2)}{' '}\r\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\r\n        </div>\r\n      </header>\r\n      <div className={classes.details}>\r\n        <div className={classes.quantity}>\r\n          x <span>{quantity}</span>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;","\r\n\r\n// import { useSelector } from 'react-redux'\r\n\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { cartActions } from '../action/CartActions';\r\nimport { cartSliceActions } from '../slice/CartUiSlice';\r\nimport Card from '../UI/Card';\r\nimport classes from './Cart.module.css';\r\nimport CartItem from './CartItem';\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch()\r\n  const showCart = useSelector(state => state.get.showCart)\r\n  const data = useSelector(state => state.get.data)\r\n\r\n  const cartItems = [{\r\n    id: 1,\r\n    name: 'product',\r\n    quantity: 23,\r\n    totalPrice: 123,\r\n    price: 34\r\n  }]\r\n  // const cartItems = useSelector(state => state.cart.items) //response\r\n  // const showCarts = () => {\r\n  //   setTimeout(() => {\r\n  //     console.log('button tested');\r\n  //     console.log(data);\r\n  //     dispatch(cartActions())\r\n  //   }, 3000);\r\n  // }\r\n  const showCarts = () => {\r\n    // console.log('tested');\r\n    dispatch(cartSliceActions.showCart(true))\r\n  }\r\n  useEffect(() => {\r\n    dispatch(cartActions())\r\n  }, [])\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data])\r\n\r\n  return (\r\n    <Card className={classes.cart}>\r\n      <h2>Your Shopping Cart</h2>\r\n      <button onClick={showCarts}>Show My Carts From Firebase</button>\r\n      <ul>\r\n\r\n        {showCart && data.map(el => (\r\n          <CartItem\r\n            key={el.id}\r\n            item={{\r\n              id: el.id,\r\n              title: el.name,\r\n              quantity: el.quantity,\r\n              total: el.totalPrice,\r\n              price: el.price\r\n            }}\r\n          />\r\n        ))\r\n        }\r\n\r\n      </ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import { cartSliceActions } from \"../slice/CartUiSlice\"\r\n\r\nexport const cartActions = () => {\r\n    return async (dispatch) => {\r\n        dispatch(cartSliceActions.loading(true))\r\n        fetch('https://testmode-83df9-default-rtdb.firebaseio.com/cart.json')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(data.items);\r\n                dispatch(cartSliceActions.addItemToCart(data.items))\r\n            })\r\n        dispatch(cartSliceActions.loading(false))\r\n        // dispatch(cartSliceActions.showCart(true))\r\n    }\r\n}","import styled from 'styled-components'\r\nconst Loading = () => {\r\n    return <Spinner></Spinner>\r\n}\r\n\r\nconst Spinner = styled.div`\r\nheight: 90px;\r\nwidth: 90px;\r\nborder-left: 5px solid #049fca;\r\nborder-bottom: 5px solid #86ff88;\r\nborder-right: 5px solid #f7ff05;\r\nborder-top: 5px solid transparent;\r\nborder-radius: 50%;\r\nanimation: spinner 1s linear infinite;\r\ntext-align: center;\r\n@keyframes spinner {\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n}\r\n`\r\nexport default Loading","import Cart from \"./components/Cart\";\nimport Loading from \"./UI/Loading\";\nimport { useSelector } from 'react-redux';\n\n\nfunction App() {\n  const loading = useSelector(state => state.get.loading)\n  return (\n    <>\n      {loading && <Loading />}\n      {/* <Loading /> */}\n      <Cart />\n    </>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport cartSlice from \"../slice/CartUiSlice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        get: cartSlice.reducer \r\n    }\r\n})\r\nexport default store\r\n","\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1-pdW\",\"details\":\"CartItem_details__1t0HD\",\"quantity\":\"CartItem_quantity__3bFRk\",\"price\":\"CartItem_price__2KmUT\",\"itemprice\":\"CartItem_itemprice__1Gvvl\",\"actions\":\"CartItem_actions__3cKxj\"};"],"sourceRoot":""}